class Solution:
    def fib(self, N: int) -> int:
        # if N==0:
        #     return 0
        # self.fib_list=[0] * (N+1)
        
        # def fib_help(n):
        #     if n==1 or n==2:
        #         return 1
        #     if self.fib_list[n] !=0:
        #         return self.fib_list[n]
        #     return fib_help(n-1) + fib_help(n-2)
        
        # result = fib_help(N)

        # dp数组的迭代解法（自底向上）
        if N<1: return 0
        if N==1 or N==2: return 1
        fib_l = [0]*(N+1)
        fib_l[1]=fib_l[2]=1
        for i in range(3, N+1):
            fib_l[i] = fib_l[i-1] + fib_l[i-2]
        result = fib_l[N]

        return result
