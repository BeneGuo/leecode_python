# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def __init__(self):
        self.ans = float("-inf")
    def maxPathSum(self, root: TreeNode) -> int:

        def onesidemax(node: TreeNode):
            if node is None:
                return 0
            left = max(0, int(onesidemax(node.left)))
            right = max(0, int(onesidemax(node.right)))
            self.ans = max(self.ans, left + right + node.val)
            return max(left, right) + node.val
        onesidemax(root)
        return self.ans
